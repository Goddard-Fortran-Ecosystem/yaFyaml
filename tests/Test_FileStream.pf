module Test_FileStream
  use funit
  use yafyaml
  implicit none

  character(*), parameter :: TMP_FILE = '.tmp'
  character(1) :: N = new_line('a')

contains

  @before
  subroutine setup()
    integer :: unit

    open(file=TMP_FILE, newunit=unit, access='stream', form='unformatted', status='new')
    write(unit) 'abc'//N//N//'a'
    close(unit)
    
  end subroutine setup

  @after
  subroutine teardown()
    integer :: unit
    open(file=TMP_FILE, newunit=unit, form='formatted', status='old')
    close(unit,status='delete')
  end subroutine teardown

  @test
  subroutine test_read()
    type(FileStream) :: f

    character(:), allocatable :: buffer

    f = FileStream(TMP_FILE)
    buffer = f%read(1)
    @assert_that(buffer,is(equal_to('a')))

    buffer = f%read(3)
    @assert_that(buffer,is(equal_to('bc'//N)))

    buffer = f%read(3)
    @assert_that(len(buffer),is(equal_to(2)))
    @assert_that(buffer,is(equal_to(N//'a')))
    call f%close()

  end subroutine test_read

end module Test_FileStream
